import java.nio.file.Files
import java.nio.file.Paths

import static java.nio.file.StandardCopyOption.REPLACE_EXISTING

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'

group "org.logstash.outputs"
version Files.readAllLines(Paths.get("version")).first()

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.google.cloud:google-cloud-pubsub:1.120.13"

    implementation "io.grpc:grpc-api:1.48.0"
    implementation "io.grpc:grpc-context:1.48.0"
    implementation "io.grpc:grpc-stub:1.48.0"
    implementation "io.grpc:grpc-protobuf:1.48.0"
    implementation "io.grpc:grpc-protobuf-lite:1.48.0"
    implementation "com.google.api:api-common:2.2.1"
    implementation "javax.annotation:javax.annotation-api:1.3.2"
    implementation "com.google.protobuf:protobuf-java:3.21.4"
    implementation "com.google.api.grpc:proto-google-common-protos:2.9.2"
    implementation "com.google.auth:google-auth-library-oauth2-http:1.8.1"
    implementation "com.google.auth:google-auth-library-credentials:1.8.1"
    implementation "com.google.http-client:google-http-client-gson:1.42.2"
    implementation "com.google.api.grpc:proto-google-cloud-pubsub-v1:1.102.13"
    implementation "javax.annotation:javax.annotation-api:1.3.2"
    implementation "com.google.auto.value:auto-value-annotations:1.9"
    implementation "com.google.guava:failureaccess:1.0.1"
    implementation "com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation "org.checkerframework:checker-qual:3.23.0"
    implementation "com.google.errorprone:error_prone_annotations:2.14.0"
    implementation "com.google.j2objc:j2objc-annotations:1.3"
    implementation "com.google.api.grpc:proto-google-iam-v1:1.5.2"
    implementation "com.google.guava:guava:31.1-jre"
    implementation "com.google.guava:failureaccess:1.0.1"
    implementation "com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava"
    implementation "org.checkerframework:checker-qual:3.23.0"
    implementation "com.google.j2objc:j2objc-annotations:1.3"
    implementation "com.google.api:gax:2.18.7"
    implementation "com.google.api:gax-grpc:2.18.7"
    implementation "io.grpc:grpc-alts:1.48.0"
    implementation "io.grpc:grpc-grpclb:1.48.0"
    implementation "org.conscrypt:conscrypt-openjdk-uber:2.5.2"
    implementation "io.grpc:grpc-auth:1.48.0"
    implementation "io.grpc:grpc-netty-shaded:1.48.0"
    implementation "io.grpc:grpc-googleapis:1.48.0"
    implementation "io.grpc:grpc-xds:1.48.0"
    implementation "io.grpc:grpc-services:1.48.0"
    implementation "com.google.re2j:re2j:1.6"
    implementation "io.opencensus:opencensus-proto:0.2.0"
    implementation "com.google.api:gax-httpjson:0.103.7"
    implementation "com.google.code.gson:gson:2.9.1"
    implementation "com.google.protobuf:protobuf-java-util:3.21.4"
    implementation "org.threeten:threetenbp:1.6.0"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation "io.opencensus:opencensus-api:0.31.1"
    implementation "io.grpc:grpc-core:1.48.0"
    implementation "com.google.android:annotations:4.1.1.4"
    implementation "org.codehaus.mojo:animal-sniffer-annotations:1.21"
    implementation "io.perfmark:perfmark-api:0.25.0"
    implementation "com.google.errorprone:error_prone_annotations:2.14.0"
    implementation "com.google.auto.value:auto-value-annotations:1.9"
    implementation "com.google.http-client:google-http-client:1.42.2"
    implementation "org.apache.httpcomponents:httpclient:4.5.13"
    implementation "commons-logging:commons-logging:1.2"
    implementation "commons-codec:commons-codec:1.15"
    implementation "org.apache.httpcomponents:httpcore:4.4.15"
    implementation "io.opencensus:opencensus-contrib-http-util:0.31.1"
}

task generateGemJarRequiresFile {
    doLast {
        File jars_file = file('lib/logstash-output-google_pubsub_jars.rb')
        jars_file.newWriter().withWriter { w ->
            w << "# AUTOGENERATED BY THE GRADLE SCRIPT. DO NOT EDIT.\n\n"
            w << "require \'jar_dependencies\'\n"
            configurations.runtimeClasspath.allDependencies.each {
                w << "require_jar(\'${it.group}\', \'${it.name}\', \'${it.version}\')\n"
            }
            w << "require_jar(\'${project.group}\', \'${project.name}\', \'${project.version}\')\n"
        }
    }
}

task vendor {
    doLast {
        String vendorPathPrefix = "vendor/jar-dependencies"
        configurations.runtimeClasspath.allDependencies.each { dep ->
            File f = configurations.runtimeClasspath.filter { it.absolutePath.contains("${dep.group}/${dep.name}/${dep.version}") }.singleFile
            String groupPath = dep.group.replaceAll('\\.', '/')
            File newJarFile = file("${vendorPathPrefix}/${groupPath}/${dep.name}/${dep.version}/${dep.name}-${dep.version}.jar")
            newJarFile.mkdirs()
            Files.copy(f.toPath(), newJarFile.toPath(), REPLACE_EXISTING)
        }
        String projectGroupPath = project.group.replaceAll('\\.', '/')
        File projectJarFile = file("${vendorPathPrefix}/${projectGroupPath}/${project.name}/${project.version}/${project.name}-${project.version}.jar")
        projectJarFile.mkdirs()
        Files.copy(file("$buildDir/libs/${project.name}-${project.version}.jar").toPath(), projectJarFile.toPath(), REPLACE_EXISTING)
    }
}

vendor.dependsOn(jar, generateGemJarRequiresFile)
